/*
 * IPGeolocation.io - IP intelligence products
 *
 * Ipgeolocation provides a set of APIs to make ip based decisions.
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IPGeolocation.Model;
using IPGeolocation.Client;
using System.Reflection;

namespace IPGeolocation.Test.Model
{
    /// <summary>
    ///  Class for testing TimezoneDetail
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TimezoneDetailTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TimezoneDetail
        //private TimezoneDetail instance;

        public TimezoneDetailTests()
        {
            // TODO uncomment below to create an instance of TimezoneDetail
            //instance = new TimezoneDetail();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TimezoneDetail
        /// </summary>
        [Fact]
        public void TimezoneDetailInstanceTest()
        {
            // TODO uncomment below to test "IsType" TimezoneDetail
            //Assert.IsType<TimezoneDetail>(instance);
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Offset'
        /// </summary>
        [Fact]
        public void OffsetTest()
        {
            // TODO unit test for the property 'Offset'
        }

        /// <summary>
        /// Test the property 'OffsetWithDst'
        /// </summary>
        [Fact]
        public void OffsetWithDstTest()
        {
            // TODO unit test for the property 'OffsetWithDst'
        }

        /// <summary>
        /// Test the property 'Date'
        /// </summary>
        [Fact]
        public void DateTest()
        {
            // TODO unit test for the property 'Date'
        }

        /// <summary>
        /// Test the property 'DateTime'
        /// </summary>
        [Fact]
        public void DateTimeTest()
        {
            // TODO unit test for the property 'DateTime'
        }

        /// <summary>
        /// Test the property 'DateTimeTxt'
        /// </summary>
        [Fact]
        public void DateTimeTxtTest()
        {
            // TODO unit test for the property 'DateTimeTxt'
        }

        /// <summary>
        /// Test the property 'DateTimeWti'
        /// </summary>
        [Fact]
        public void DateTimeWtiTest()
        {
            // TODO unit test for the property 'DateTimeWti'
        }

        /// <summary>
        /// Test the property 'DateTimeYmd'
        /// </summary>
        [Fact]
        public void DateTimeYmdTest()
        {
            // TODO unit test for the property 'DateTimeYmd'
        }

        /// <summary>
        /// Test the property 'DateTimeUnix'
        /// </summary>
        [Fact]
        public void DateTimeUnixTest()
        {
            // TODO unit test for the property 'DateTimeUnix'
        }

        /// <summary>
        /// Test the property 'Time24'
        /// </summary>
        [Fact]
        public void Time24Test()
        {
            // TODO unit test for the property 'Time24'
        }

        /// <summary>
        /// Test the property 'Time12'
        /// </summary>
        [Fact]
        public void Time12Test()
        {
            // TODO unit test for the property 'Time12'
        }

        /// <summary>
        /// Test the property 'Week'
        /// </summary>
        [Fact]
        public void WeekTest()
        {
            // TODO unit test for the property 'Week'
        }

        /// <summary>
        /// Test the property 'Month'
        /// </summary>
        [Fact]
        public void MonthTest()
        {
            // TODO unit test for the property 'Month'
        }

        /// <summary>
        /// Test the property 'Year'
        /// </summary>
        [Fact]
        public void YearTest()
        {
            // TODO unit test for the property 'Year'
        }

        /// <summary>
        /// Test the property 'YearAbbr'
        /// </summary>
        [Fact]
        public void YearAbbrTest()
        {
            // TODO unit test for the property 'YearAbbr'
        }

        /// <summary>
        /// Test the property 'IsDst'
        /// </summary>
        [Fact]
        public void IsDstTest()
        {
            // TODO unit test for the property 'IsDst'
        }

        /// <summary>
        /// Test the property 'DstSavings'
        /// </summary>
        [Fact]
        public void DstSavingsTest()
        {
            // TODO unit test for the property 'DstSavings'
        }

        /// <summary>
        /// Test the property 'DstExists'
        /// </summary>
        [Fact]
        public void DstExistsTest()
        {
            // TODO unit test for the property 'DstExists'
        }

        /// <summary>
        /// Test the property 'DstStart'
        /// </summary>
        [Fact]
        public void DstStartTest()
        {
            // TODO unit test for the property 'DstStart'
        }

        /// <summary>
        /// Test the property 'DstEnd'
        /// </summary>
        [Fact]
        public void DstEndTest()
        {
            // TODO unit test for the property 'DstEnd'
        }
    }
}
